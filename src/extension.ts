import * as vscode from 'vscode';
import { ExtractOpenFilesCommand } from './commands/extractCommand';
import { OpenVisualPanelCommand } from './commands/visualCommand';

/**
 * Funci√≥n de activaci√≥n de la extensi√≥n
 * Patr√≥n: Facade Pattern para simplificar la inicializaci√≥n
 */
export function activate(context: vscode.ExtensionContext) {
  console.log('üöÄ VS Code File Extractor est√° activ√°ndose...');

  try {
    // Registrar comando original de extracci√≥n
    const extractCommand = ExtractOpenFilesCommand.register(context);
    context.subscriptions.push(extractCommand);

    // Registrar comando visual
    const visualCommand = OpenVisualPanelCommand.register(context);
    context.subscriptions.push(visualCommand);

    console.log('‚úÖ VS Code File Extractor se ha activado correctamente');
    console.log('üìã Comandos disponibles:');
    console.log('  - Extract Open Files to Text File');
    console.log('  - üìÅ Open Visual File Extractor');

  } catch (error) {
    console.error('‚ùå Error al activar la extensi√≥n:', error);
    vscode.window.showErrorMessage(
      `Error al activar VS Code File Extractor: ${error instanceof Error ? error.message : 'Error desconocido'}`
    );
  }
}

/**
 * Funci√≥n de desactivaci√≥n de la extensi√≥n
 * Patr√≥n: Cleanup Pattern para liberar recursos
 */
export function deactivate() {
  console.log('üîÑ VS Code File Extractor se est√° desactivando...');
  // Los recursos se limpian autom√°ticamente a trav√©s de context.subscriptions
  console.log('‚úÖ VS Code File Extractor desactivado correctamente');
}
